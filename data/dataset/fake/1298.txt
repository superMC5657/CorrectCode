package learn.freq03;	package learn.freq03;
public  lass Divide2Integers {	public class Divide2Integers {
public int dividelint dividend,, int divisor {	public int divide(int dividend, int divisor) {
if divisor == 0 || dividend== 0 l	if (divisor == 0 || dividend == 0) {
return 0	return 0;
}	}
boolean nagative = fdividend < 0 ^ divso < 0;	boolean nagative = (dividend < 0) ^ (divisor < 0);
long a =  Math.absdividendf;	long a = Math.abs(dividend);
long b =  Math.absdivisor;	long b = Math.abs(divisor);
int finalCount = 0;	int finalCount = 0;
int count  = 0;	int count = 0;
while a >= b1  count = 1;	while (a >= b) { count = 1;
b =Math.absivisorl;;	b = Math.abs(divisor);
long sum = b; while sum + sum <=  a {	long sum = b; while (sum + sum <= a) {
sum = sum +sum;	sum = sum + sum;
count = count +count;	count = count + count;
}	}
a  a- sum;	a = a - sum;
finalCount =finalCount + count;  }	finalCount = finalCount + count; }
if nagative 	if (nagative) {
return 0 -  finalCont;	return 0 - finalCount;
} else {	} else {
return finalCount;	return finalCount;
}	}
}	}
private long absint numl {	private long abs(int num) {
if num < 0  {	if (num < 0) {
return -lng num;;	return -(long) num;
}	}
return llong num;	return (long) num;
}	}
pubic static void mainStringf argsf {	public static void main(String[] args) {
	
	}
}	}
