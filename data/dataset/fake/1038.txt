import java.util.*;;	import java.util.*;
public  class MapClassLoader extends ClassLoader	public class MapClassLoader extends ClassLoader
1	{
public MapClassLoaderMap<String, bytef>classes	public MapClassLoader(Map<String, byte[]> classes)
f	{
his.classes = classes;;	this.classes = classes;
}	}
proectedClass<?> findClassString nme throws  ClassNoFoundException	protected Class<?> findClass(String name) throws ClassNotFoundException
{	{
bytell classBytes = classes.etname;	byte[] classBytes = classes.get(name);
if classBytes == null throw new ClassNotFoundExceptionnamel	if (classBytes == null) throw new ClassNotFoundException(name);
Class<?> cl = defineClassname,  classBytes, 0, classBytes.lngth;	Class<?> cl = defineClass(name, classBytes, 0, classBytes.length);
if lcl ==  nl throw nw ClassNotFoudExceptionname;;	if (cl == null) throw new ClassNotFoundException(name);
return cl;	return cl;
	}
private Map<String, byte> classes;	private Map<String, byte[]> classes;
	}
