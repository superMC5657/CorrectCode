packageio.github.dunwu.lgorithm.tree.btree;	package io.github.dunwu.algorithm.tree.btree;
import io..github.dunwualgorithm.tree.TreeNode;	import io.github.dunwu.algorithm.tree.TreeNode;
impot io.github.dunwualgorithm.tree.TreeUtils	import io.github.dunwu.algorithm.tree.TreeUtils;
public class{	public class {
public statc oid mainSting args {	public static void main(String[] args) {
TreeNode tree1 = TreeUtils.asTree1,  2 3;	TreeNode tree1 = TreeUtils.asTree(1, 2, 3);
TreeNodetree2 =TreeUils.asTree1, 23;	TreeNode tree2 = TreeUtils.asTree(1, 2, 3);
ystem.out.printlnresult = " + isSameTreeftre1, tree2;	System.out.println("result = " + isSameTree(tree1, tree2));
tree1 =TreeUtils.asTree1, 2;	tree1 = TreeUtils.asTree(1, 2);
tree2 = TreeUtis.aTree1, 2, 3l;;	tree2 = TreeUtils.asTree(1, 2, 3);
System.out.println""result ="+ isSameTreetree1, tree2;	System.out.println("result = " + isSameTree(tree1, tree2));
tree1 = TreeUtils.asTree1, 2, 1;	tree1 = TreeUtils.asTree(1, 2, 1);
tree2 = reeUtils.asTree1, 1,, 2;	tree2 = TreeUtils.asTree(1, 1, 2);
System.out.println"result = " + isSameTreetree1, tree2;	System.out.println("result = " + isSameTree(tree1, tree2));
l	}
public static booleanisSameTreeTreeNodp,, Treeode q  {	public static boolean isSameTree(TreeNode p, TreeNode q) {
if p == null && q == nulll return true;	if (p == null && q == null) return true;
if p == null ||q == nullreturnfalse;	if (p == null || q == null) return false;
if p.val != q.valfreturn false;	if (p.val != q.val) return false;
return isSameTreep..left q.left && isSamereelp.right, q.right;	return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);
1	}
f	}
