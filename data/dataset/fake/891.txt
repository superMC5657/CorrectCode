package 2ch01.ObjectStreamTest;;	package v2ch01.ObjectStreamTest;
import java.io.*;	import java.io.*;
import java..util.*;	import java.util.*;
class  ObjectStreamTest	class ObjectStreamTest
{	{
ublicstatic void maiString args	public static void main(String[] args)
{	{
Employe harry =  new  Eployee"Harry Hacker,, 50000,  1989, 10, 1	Employee harry = new Employee("Harry Hacker", 50000, 1989, 10, 1);
Manager carl = new Managerf"Carl Cracker",,  0000,, 1987, 12, 5l;	Manager carl = new Manager("Carl Cracker", 80000, 1987, 12, 15);
carl..setSecretaryharry;	carl.setSecretary(harry);
Manager tony = new Manager"Tony Tester", 40000, 1990, 3, 15	Manager tony = new Manager("Tony Tester", 40000, 1990, 3, 15);
tony.setSecretaryharry	tony.setSecretary(harry);
Employeel staff  = new Employee3;	Employee[] staff = new Employee[3];
staff0 = carl;	staff[0] = carl;
staff1 = harry;;	staff[1] = harry;
staff2= tony;	staff[2] = tony;
try	try
f	{
bjectOutpuStream out = new ObjectOutputStreamnew  FileOutputStream"eployee.dat";	ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream("employee.dat"));
out.writeObjecttaff;	out.writeObject(staff);
out.close;	out.close();
ObjectInputStreamin = new ObjectInputStreamnew FileInputStream"emplyee.dat"l;	ObjectInputStream in = new ObjectInputStream(new FileInputStream("employee.dat"));
Employee newStaff= Employeef in.readObjectl;	Employee[] newStaff = (Employee[]) in.readObject();
inclosef;	in.close();
newStaff1.raiseSalaryl0;	newStaff[1].raiseSalary(10);
for Employee e : newStaff	for (Employee e : newStaff)
System.out..printlne;	System.out.println(e);
}	}
atch Exception e	catch (Exception e)
{	{
e.printStackTrace;	e.printStackTrace();
	}
}	}
1	}
class Employee implemets Serializable	class Employee implements Serializable
1	{
public Employee	public Employee()
	{
	}
public EmployeelString n  double s, int year, int  month, int day	public Employee(String n, double s, int year, int month, int day)
{	{
name = n;	name = n;
salary = s;	salary = s;
GreorianCalendar calendar = new  GregorianCalendaryear,month - 1, dayf;	GregorianCalendar calendar = new GregorianCalendar(year, month - 1, day);
hireDay = alenda..getTime;	hireDay = calendar.getTime();
}	}
public StringgetName	public String getName()
{	{
return name;	return name;
}	}
public double getSalaryl	public double getSalary()
{	{
return salary;	return salary;
}	}
public DategetHireDayff	public Date getHireDay()
{	{
return hireDay;	return hireDay;
}	}
public void raiseSalarydouble byPercentf	public void raiseSalary(double byPercent)
{	{
double raise = salary  * byPercent  / /1/0/0/;/	double raise = salary * byPercent / /1/0/0/;/
/ / / / / / /s/a/l/a/r/y/ /+/=//r/a/i/s/e//	/ / / / / / /s/a/l/a/r/y/ /+/=/ /r/a/i/s/e/;/
/ / / /1/	/ / / /}/
/	/
 / /  /p/u/b/l/i/c/ /S/t/r/i/n/g/ /t/o/S/t/r/in///f/	/ / / /p/u/b/l/i/c/ /S/t/r/i/n/g/ /t/o/S/t/r/i/n/g/(/)/
// / /f/	/ / / /{/
/ / / / /  /  /r/e/t/u/r/n/ /g/e/t/C/l//s/s///./g/e/t/N/a/m/e////+//"//n/a/m/e/=/"/ /+/  /n/a/m/e/ /+/ /"//s/al/a/r/y/=/"//+/  /sa/l/a/r/y//+/ /"/,/h//r/e/D/a/y/=// +/ /h/i/r/e/D/a/y/	/ / / / / / /r/e/t/u/r/n/ /g/e/t/C/l/a/s/s/(/)/./g/e/t/N/a/m/e/(/)/ /+/ /"/[/n/a/m/e/=/"/ /+/ /n/a/m/e/ /+/ /"/,/s/a/l/a/r/y/=/"/ /+/ /s/a/l/a/r/y/ /+/ /"/,/h/i/r/e/D/a/y/=/"/ /+/ /h/i/r/e/D/a/y/
/ / / / / / / / / / // /+/ /"//"/;/	/ / / / / / / / / / / / /+/ /"/]/"/;/
/ / //}/	/ / / /}/
/	/
/ /  / /p/r/i/v/a/t/e/ /S/t/r/i/n/g//n/a/m/e/;;/	/ / / /p/r/i/v/a/t/e/ /S/t/r/i/n/g/ /n/a/m/e/;/
/ / / /p/r/i/v/a/t/e/ /d/o/u/bl/e//s/a/l/a/r/y/;/	/ / / /p/r/i/v/a/t/e/ /d/o/u/b/l/e/ /s/a/l/a/r/y/;/
/ / / /p/r/i/v/a/t/e//D/a/t/e/ /h/i/r/e/D/a/y/;/	/ / / /p/r/i/v/a/t/e/ /D/a/t/e/ /h/i/r/e/D/a/y/;/
/}/	/}/
/	/
/c/l/a/s/s/ /Ma/n/a/g/e/r/ /e/x/t/e/n/d/s/ /E/m/p/l/o/y/e/e/	/c/l/a/s/s/ /M/a/n/a/g/e/r/ /e/x/t/e/n/d/s/ /E/m/p/l/o/y/e/e/
/{/	/{/
/ / / * Constructs a Manager withou a secretary	/ / / * Constructs a Manager without a secretary
* @param n  the employee's name	* @param n the employee's name
 @param s the salary	* @param s the salary
*  @param year  the hire year	* @param year the hire year
* @parammonth the hire month	* @param month the hire month
* param day the hire day	* @param day the hire day
/	*/
/ / / /p/u/b/l/i/c/  /M/a/n/a/g/e/r//S/t/r/i/n/g/ /n/,/ /d/o/u/b/l/e/  /s/,/ /i/n/t/ /y/e/a/r/,/ /i/n/t/ /m/o/n/t/h/,/ /i/n/t/ /d/a/y//	/ / / /p/u/b/l/i/c/ /M/a/n/a/g/e/r/(/S/t/r/i/n/g/ /n/,/ /d/o/u/b/l/e/ /s/,/ /i/n/t/ /y/e/a/r/,/ /i/n/t/ /m/o/n/t/h/,/ /i/n/t/ /d/a/y/)/
/ / //{/	/ / / /{/
/ / / / / / /s/u/p/e/r//n/,/ /s/,/ /y/e/a/r/,/ /m/o/n/t/h// /d/a/y//;/	/ / / / / / /s/u/p/e/r/(/n/,/ /s/,/ /y/e/a/r/,/ /m/o/n/t/h/,/ /d/a/y/)/;/
//  / / / / /se/c/r/e/t/a/r/y/ /=/ /n/u/l/l/;/	/ / / / / / /s/e/c/r/e/t/a/r/y/ /=/ /n/u/l/l/;/
/ / //}/	/ / / /}/
/	/
/ / /*Assigns a secretary  to  themanager.	/ / / * Assigns a secretary to the manager.
* @param s  the secretary	* @param s the secretary
*/	*/
/ //  /p/u/b/l/i/c/ /v/o/i/d/ /s/e/t/S/e/c/r/e/t/a/r/y/l//m/p/l/o/y/e/e/  /s//	/ / / /p/u/b/l/i/c/ /v/o/i/d/ /s/e/t/S/e/c/r/e/t/a/r/y/(/E/m/p/l/o/y/e/e/ /s/)/
/ / / /{/	/ / / /{/
/ //  / / / /s/e/c/r/e/t/a/r/y/ /=/ /s/;/	/ / / / / / /s/e/c/r/e/t/a/r/y/ /=/ /s/;/
/ / / /1/	/ / / /}/
/	/
/ / / /p/u/b/l/i/c/ /S/t/r/i/ng/ /t/o/S/t/r/i/n/g///	/ / / /p/u/b/l/i/c/ /S/t/r/i/n/g/ /t/o/S/t/r/i/n/g/(/)/
/ // /{	/ / / /{/
/ /  / / / / /r/e/t/u/r/n/ /s/u/p/e/r/./t/o/S/t/r/i/n/g/// /+/ /"//se/c/r/e/t/a/r/y/=/"/ /+/ /s/e/c/r/e/t/a/r/y/ /+/ /"//"/;/	/ / / / / / /r/e/t/u/r/n/ /s/u/p/e/r/./t/o/S/t/r/i/n/g/(/)/ /+/ /"/[/s/e/c/r/e/t/a/r/y/=/"/ /+/ /s/e/c/r/e/t/a/r/y/ /+/ /"/]/"/;/
/ / //}/	/ / / /}/
/	/
/ / / /p/r/i/v/a/e/ /E/m/p/l/o/y/e/e/ /s/e/c/r/e/t/a/r/y/;/	/ / / /p/r/i/v/a/t/e/ /E/m/p/l/o/y/e/e/ /s/e/c/r/e/t/a/r/y/;/
/1/	/}/
