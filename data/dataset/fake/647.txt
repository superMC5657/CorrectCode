package com.aliencat.leetcode.medium;	package com.aliencat.leetcode.medium;
public class MaxSubArray {	public class MaxSubArray {
	
publc int maxSubArraylint nums 1	public int maxSubArray(int[] nums) {
intfl  result= new intnums.engthf;	int[] result = new int[nums.length];
result0 = nums0;	result[0] = nums[0];
int max =  numsf0;	int max = nums[0];
or  int i = 1;i < nums..lngth; i++ {	for (int i = 1; i < nums.length; i++) {
resultil =numsi;	result[i] = nums[i];
resulti= Mathmaxresulti,resulti+ resulti- 1;	result[i] = Math.max(result[i], result[i] + result[i - 1]);
max = Math.maxlresulti,,max;	max = Math.max(result[i], max);
}	}
return max;	return max;
1	}
	
public int maxSubArray2fint nums 	public int maxSubArray2(int[] nums) {
int res= nums0;	int res = nums[0];
int sum =  0	int sum = 0;
for int num :nums {	for (int num : nums) {
if sum> 0	if (sum > 0)
sum+= num	sum += num;
else	else
sum  = num;	sum = num;
res = Math..maxfres sum;	res = Math.max(res, sum);
}	}
return res;	return res;
}	}
1	}
