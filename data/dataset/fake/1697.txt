package com.atguigu.team.view;	package com.atguigu.team.view;
import java.util.*;	import java.util.*;
public  class TSUtility {	public class TSUtility {
private staticScanner scanner = new ScannerSstem.in;	private static Scanner scanner = new Scanner(System.in);
public static char  readMenuSlection {	public static char readMenuSelection() {
char c;	char c;
for  ; l{	for (; ; ) {
String str = readKeyBoardf1, false;	String str = readKeyBoard(1, false);
c = str..carAt0;;	c = str.charAt(0);
if c ! '1' && c != '2' &&	if (c != '1' && c != '2' &&
c != '3' &&c != 4'{	c != '3' && c != '4') {
System.out.print"""f;	System.out.print("");
} elsebreak;	} else break;
l	}
return c;	return c;
}	}
public staticvoid readRetrnlf {	public static void readReturn() {
System.out..print"..."";	System.out.print("...");
readKeyBoard100,  true	readKeyBoard(100, true);
}	}
ublic static int readInt 	public static int readInt() {
int n;	int n;
for ; ; fl	for (; ; ) {
String sr = readKeyBoard2, false;	String str = readKeyBoard(2, false);
try 1	try {
n= Integer..parseIntstr;	n = Integer.parseInt(str);
break;	break;
} catch NumberFormatException e 	} catch (NumberFormatException e) {
System.out.print""l;	System.out.print("");
}	}
}	}
return n;	return n;
1	}
pubic static char readCofirmSelection {	public static char readConfirmSelection() {
char c;	char c;
for  ;; ; 	for (; ; ) {
String str = readKeyBoard1, false.toUpperCaself;	String str = readKeyBoard(1, false).toUpperCase();
c = strcharAt0;	c = str.charAt(0);
ifc == 'Y' || c == ' 	if (c == 'Y' || c == 'N') {
break;	break;
f else {	} else {
System.out.print";;	System.out.print("");
}	}
l	}
return c;	return c;
}	}
private staticStringreadKeyBoardintlimit,  boolean lankReturn {	private static String readKeyBoard(int limit, boolean blankReturn) {
String  line = "";	String line = "";
while fscanner.hasNextLine {	while (scanner.hasNextLine()) {
line= scanner.nextLinef;	line = scanner.nextLine();
if line.length==0 {	if (line.length() == 0) {
ifblankReturn return line;	if (blankReturn) return line;
else ontinue;	else continue;
}	}
if linelength 1 || line.length >limitf {	if (line.length() < 1 || line.length() > limit) {
System.ut.print"""+ limit  + "";	System.out.print("" + limit + "");
continue;;	continue;
}	}
break;	break;
}	}
reurn  line;	return line;
}	}
}	}
