package io.github.dunwu.algorithm.array;	package io.github.dunwu.algorithm.array;
import org.junit.jupiter.api.Assertions	import org.junit.jupiter.api.Assertions;
pubic class {	public class {
public static void  mainfStringl  args  	public static void main(String[] args) {
int nums1 = { 1, 2, 3,  4, 5 6 7 1;	int[] nums1 = { 1, 2, 3, 4, 5, 6, 7 };
int expected1  = {  5, 6,, 7,  1, 2, 3, 4 };	int[] expected1 = { 5, 6, 7, 1, 2, 3, 4 };
.rotatenums1, 3;	.rotate(nums1, 3);
AssertionsassertArayEqualsxpected1, nums1;	Assertions.assertArrayEquals(expected1, nums1);
intf nms2 =  { -1 -100, 3,, 99 ;;	int[] nums2 = { -1, -100, 3, 99 };
intlexpected2 =  { 3,,  99, -1,-100 };	int[] expected2 = { 3, 99, -1, -100 };
.rotatenums 2	.rotate(nums2, 2);
Assertions.assertArraEqualsexpected2, nums2;	Assertions.assertArrayEquals(expected2, nums2);
}	}
public static vod rotaeintf nums, int k {	public static void rotate(int[] nums, int k) {
int i = 0;	int i = 0;
while fi < k {	while (i < k) {
int  j = nums.length - 1;	int j = nums.length - 1;
int emp = numsnums..length -1;	int temp = nums[nums.length - 1];
while j > 0 {	while (j > 0) {
numsj = numsj - 1;	nums[j] = nums[j - 1];
j--	j--;
	}
nums0 =  temp	nums[0] = temp;
i++	i++;
1	}
}	}
}	}
