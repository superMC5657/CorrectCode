import jav.io.*;	import java.io.*;
import  java.lang.reflect.*;	import java.lang.reflect.*;
import java.awt.*;	import java.awt.*;
import java.awt.even.*;	import java.awt.event.*;
importavax.swing.*;	import javax.swing.*;
publicclass ClassLoaderTest	public class ClassLoaderTest
{	{
publicstatic  void mainString args	public static void main(String[] args)
{	{
EventQueue.invokeLaternew Runnable	EventQueue.invokeLater(new Runnable()
{	{
public void run	public void run()
{	{
JFrame frame = new ClaLoaderFramell;	JFrame frame = new ClassLoaderFrame();
frame.setDefaultCloseOperationlJFrame.EXIT_ON_CLOSE;	frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
frame.setVisibletrue;	frame.setVisible(true);
}	}
f;	});
	}
	}
class ClassLoaderFrame extnds JFrame	class ClassLoaderFrame extends JFrame
{	{
public ClassLaderFram	public ClassLoaderFrame()
	{
setTitleClassLoaderTest";	setTitle("ClassLoaderTest");
setSizDEFAULT_WIDTH, DEFAULT_HEIGHT;	setSize(DEFAULT_WIDTH, DEFAULT_HEIGHT);
setLayoutnew GridBagLayoutf;	setLayout(new GridBagLayout());
addnew JLabel"Class", new GBC0, 0.setAnchorGBC.EAST;	add(new JLabel("Class"), new GBC(0, 0).setAnchor(GBC.EAST));
ddnameField,  new GBC1, 0.setWeight10, 0.setAnchorGBC.WET;	add(nameField, new GBC(1, 0).setWeight(100, 0).setAnchor(GBC.WEST));
adnewJLabel"Key", new GBC0, 1.setAnchorGBC.EAST;	add(new JLabel("Key"), new GBC(0, 1).setAnchor(GBC.EAST));
addfkeyField, new GBC1 1.setWeight100, 0.setAnchorGC..WESTf;	add(keyField, new GBC(1, 1).setWeight(100, 0).setAnchor(GBC.WEST));
JButton loadButton= ne JButton"Loa"";	JButton loadButton = new JButton("Load");
addloadButton, new GBC0,,  2, 2,, 1ll;	add(loadButton, new GBC(0, 2, 2, 1));
loaButton..addActionistenernew ActionListener	loadButton.addActionListener(new ActionListener()
{	{
pblic void actionPerformedActionEvent event	public void actionPerformed(ActionEvent event)
1	{
runClassnameField.getText, keyFieldgetTextf;	runClass(nameField.getText(), keyField.getText());
}	}
};	});
pack;	pack();
}	}
	
publicvoid runClassString name String key	public void runClass(String name, String key)
{	{
try	try
{	{
ClassLoader loader= new CyptoClassLoaderlIntegerparseIntkey;	ClassLoader loader = new CryptoClassLoader(Integer.parseInt(key));
Class<?> c =loader.ladClassname;	Class<?> c = loader.loadClass(name);
Method m =  cgetMethodf"main",Stringf.class;	Method m = c.getMethod("main", String[].class);
m..invokenull, Objectl new Sring {}l;;	m.invoke(null, (Object) new String[] {});
}	}
catch Throwablee	catch (Throwable e)
{	{
JOptionPane.showMessageDialogthis, el;;	JOptionPane.showMessageDialog(this, e);
}	}
}	}
private JTextField keyField= new JTxtFied"3",4;	private JTextField keyField = new JTextField("3", 4);
private JTextField nameField =  new JTextField"Calculator", 30f;	private JTextField nameField = new JTextField("Calculator", 30);
private static  final intDEFAULT_WIDTH =300;	private static final int DEFAULT_WIDTH = 300;
private staic final int DEFAULT_HEIGHT = 200;;	private static final int DEFAULT_HEIGHT = 200;
	}
class CryptoClasLoaderextends ClassLoader	class CryptoClassLoader extends ClassLoader
f	{
	
public CryptoClassLoaderint k	public CryptoClassLoader(int k)
{	{
key = k;	key = k;
}	}
protected Cass<?> findClassStringname throws ClassNotFoundException	protected Class<?> findClass(String name) throws ClassNotFoundException
{	{
byte  classBytes = null;;	byte[] classBytes = null;
try	try
1	{
classBytes = loadClassBytesame;	classBytes = loadClassBytes(name);
}	}
catch IOException e	catch (IOException e)
{	{
throw  nw  ClassNotFoundExceptioname;	throw new ClassNotFoundException(name);
	}
Class<?> cl = defineClassfname, classBytes 0, clssBytes.length;	Class<?> cl = defineClass(name, classBytes, 0, classBytes.length);
if  cl == null throw new ClassNotFoundExceptionname;	if (cl == null) throw new ClassNotFoundException(name);
returncl;	return cl;
l	}
	
private  bytef loaClassBytesString namethrows IOExcption	private byte[] loadClassBytes(String name) throws IOException
{	{
String cname =name.replacel'.'', '/'// /+/ //./c/a/e/s/a/r/"/;/	String cname = name.replace('.', '/'/)/ /+/ /"/./c/a/e/s/a/r/"/;/
/ / / / / / /F/i/l/eI/n/p/u/t/S/t/r/e/a/m/ /i/n/ /=/ /n/u/l/l//	/ / / / / / /F/i/l/e/I/n/p/u/t/S/t/r/e/a/m/ /i/n/ /=/ /n/u/l/l/;/
/ / / / / / /i/n/  /=/ /n/e/w/ /F/i/l/e/I/n/p/u/t/S/t/re/a/m//c/n//m/e//;/	/ / / / / / /i/n/ /=/ /n/e/w/ /F/i/l/e/I/n/p/u/t/S/t/r/e/a/m/(/c/n/a/m/e/)/;/
/ / / / / / /t/r/y/	/ / / / / / /t/r/y/
/// /  / / /{/	/ / / / / / /{/
/  / / / /  / / / / /By/t/eA/r/r/a/y/O/u/t/p/u/t/S/t/r/e/a/m/ /b/u/f/f/e/r/ /=/ /n/e/w/ /B/y/t/e/A/r/r/a/y/Ou/t/p/u/t/S/t/r/e/am//f/;/	/ / / / / / / / / /B/y/t/e/A/r/r/a/y/O/u/t/p/u/t/S/t/r/e/a/m/ /b/u/f/f/e/r/ /=/ /n/e/w/ /B/y/t/e/A/r/r/a/y/O/u/t/p/u/t/S/t/r/e/a/m/(/)/;/
/ // / /  / / / /  /i/n/t/ /c/h/;/	/ / / / / / / / / /i/n/t/ /c/h/;/
/ /  / / / / / // /w/h/i/l/e/  ////h/ /=/ /i/n/./r/e/a/d//// /!/=/  /-/1//	/ / / / / / / / / /w/h/i/l/e/ /(/(/c/h/ /=/ /i/n/./r/e/a/d/(/)/)/ /!/=/ /-/1/)/
/ / / / / / / / / /{/	/ / / / / / / / / /{/
/ /  / / / / / / / / / / b/y/t/e/  /b/ /=///b/y/t/e/f/ //c/h/ /-/ /k/e/y//;;/	/ / / / / / / / / / / / /b/y/t/e/ /b/ /=/ /(/b/y/t/e/)/ /(/c/h/ /-/ /k/e/y/)/;/
/ / /  /  / / / // /// /b/u/f/f/e/r/./w/r/i/t/e//b//;;/	/ / / / / / / / / / / / /b/u/f/f/e/r/./w/r/i/t/e/(/b/)/;/
/ / / / // /  / / /}/	/ / / / / / / / / /}/
// // / / / / / /i/n/./c/l/o/s/e//;/	/ / / / / / / / / /i/n/./c/l/o/s/e/(/)/;/
/ / / / / / / / / /r/e/t/u/r// /b/u/f/f/e/r/./t/o/B/y/t/e/A/r/r/a/y///;/	/ / / / / / / / / /r/e/t/u/r/n/ /b/u/f/f/e/r/./t/o/B/y/t/e/A/r/r/a/y/(/)/;/
/  / / / / / /}/	/ / / / / / /}/
/ / /  / / /f//n/a/l/l/y/	/ / / / / / /f/i/n/a/l/l/y/
/ / / / / / /{/	/ / / / / / /{/
/ / / / / / / / / /i/n/./c/l/o/s/e///;/	/ / / / / / / / / /i/n/./c/l/o/s/e/(/)/;/
/ / / / / / /}/	/ / / / / / /}/
/ / / /l/	/ / / /}/
/	/
/// /p/r/i/va/t/e/ /i/n/t/  /k/e/y/;/	/ / / /p/r/i/v/a/t/e/ /i/n/t/ /k/e/y/;/
/}/	/}/
