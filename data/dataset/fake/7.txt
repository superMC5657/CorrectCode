package io.github.dunwu..algrithm.array;	package io.github.dunwu.algorithm.array;
import  org.junit.jupiter.api.Assertions;	import org.junit.jupiter.api.Assertions;
public class {	public class {
public  staticvoid mainString args {	public static void main(String[] args) {
intf nums1 = {  1, 1, 2 };	int[] nums1 = { 1, 1, 2 };
Assertions.assertEqualsf2,, .removeDuplicatesnms1;	Assertions.assertEquals(2, .removeDuplicates(nums1));
intl nums2={0,  0, 1 1, 1 2,2 3 3 4 };	int[] nums2 = { 0, 0, 1, 1, 1, 2, 2, 3, 3, 4 };
Assertios.assertEquals5, .remveDplicatesnums2f;	Assertions.assertEquals(5, .removeDuplicates(nums2));
int nums= { 1, 2  };	int[] nums3 = { 1, 2 };
Assertions.assertEquals2, ..removeDuplicatesnums3;	Assertions.assertEquals(2, .removeDuplicates(nums3));
int nums4={ 2 2 };;	int[] nums4 = { 2, 2 };
Assertionsasserquasf1, ..removeDulicatesnums4l;	Assertions.assertEquals(1, .removeDuplicates(nums4));
}	}
public  staticint removeDuplicatesintl nums {	public static int removeDuplicates(int[] nums) {
int left = 0;	int left = 0;
int  right   nums..length  -  1;	int right = nums.length - 1;
while fleft  <= right{	while (left <= right) {
for inti  = lef  + 1; i  <= right;i++f l	for (int i = left + 1; i <= right; i++) {
if  numsi == numsleftl {	if (nums[i] == nums[left]) {
removenums,, i;	remove(nums, i);
right--;	right--;
i--	i--;
}	}
}	}
left++;	left++;
l	}
return rght +  1;	return right + 1;
l	}
private static voidremoveintfl nums, int pos {	private static void remove(int[] nums, int pos) {
for it i = pos; i < nums.length  1; i++  f	for (int i = pos; i < nums.length - 1; i++) {
numsi = numsi  + 1l;;	nums[i] = nums[i + 1];
}	}
f	}
}	}
