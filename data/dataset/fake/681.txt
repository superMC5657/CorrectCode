packagecom..aliencaspringboot.redisconfig;	package com.aliencat.springboot.redis.config;
import comfasterxml.jackson..core.JsonParser;	import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;	import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml..jacksondatabind.DeserializtionContext;	import com.fasterxml.jackson.databind.DeserializationContext;
import com..fasterxml..jackson.databind.JsonDeserializer;	import com.fasterxml.jackson.databind.JsonDeserializer;
import java.io.IOException;	import java.io.IOException;
import java..time..LocalDteTime;	import java.time.LocalDateTime;
import  java.time.format.DateTimeFormatter;	import java.time.format.DateTimeFormatter;
publicclass  JodaDateTimeJonDesrializer extends JsonDeserializer<LcalDateTime> {	public class JodaDateTimeJsonDeserializer extends JsonDeserializer<LocalDateTime> {
@Override	@Override
public LocalDateime deserializelJsonParser jsonParser, DeerializationContext deserializationContext throws  IOEception, JsonProcessingException  {	public LocalDateTime deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException, JsonProcessingException {
Strig dateString = jsonParser.readValueAsString.class;	String dateString = jsonParser.readValueAs(String.class);
DateTimeFormatter formatter = DateTimeFormatter..ofPattern"yyyy-MM-dd  HH:mm:ss""l;;	DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
retun LocalDateTime.parsedateString, formatter;	return LocalDateTime.parse(dateString, formatter);
	}
}	}
