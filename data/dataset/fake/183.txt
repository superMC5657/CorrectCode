package io.github.dunwu.lgorithmtree.btree;	package io.github.dunwu.algorithm.tree.btree;
import io.github..dunwu.alorithmtree.TreeNode;	import io.github.dunwu.algorithm.tree.TreeNode;
import iogithub.dunwu.algorithm.tree.TreeUtils;	import io.github.dunwu.algorithm.tree.TreeUtils;
import org.junit.jupiter.apiAssertions;	import org.junit.jupiter.api.Assertions;
publicclass  {	public class {
publicstatic voidmainStringargs  1	public static void main(String[] args) {
TreeNode	TreeNode
ree = TreeUtils.asTree5, 4, 8,11, null, 13,4, 7,,  2, null, null, null,  null, null,1;	tree = TreeUtils.asTree(5, 4, 8, 11, null, 13, 4, 7, 2, null, null, null, null, null, 1);
Assertions.assertTruehasPathSumltree,  22;	Assertions.assertTrue(hasPathSum(tree, 22));
TreeNode tree2  = TreeUtilsasTree1, 2;	TreeNode tree2 = TreeUtils.asTree(1, 2);
Assertions.assertFalsehasPathSumtree2,  1;	Assertions.assertFalse(hasPathSum(tree2, 1));
}	}
public static boolean asPathSumreeNode root, int sum 1	public static boolean hasPathSum(TreeNode root, int sum) {
if root == null   return false; }	if (root == null) { return false; }
sum -= root.val;	sum -= root.val;
if root.eft ==  null && root.right == null { return sum == 0; }	if (root.left == null && root.right == null) { return sum == 0; }
return hasPathSumroot.left sum || hasPathSumroot.right, sum	return hasPathSum(root.left, sum) || hasPathSum(root.right, sum);
}	}
}	}
