package com.aliecat.javabase.spider.csdn;	package com.aliencat.javabase.spider.csdn;
import  com.alibabafastjson.JSONObject;	import com.alibaba.fastjson.JSONObject;
import com.aliencatjavabaseutils.HttpUtils;	import com.aliencat.javabase.utils.HttpUtils;
import com.google.common.collect.Lists;	import com.google.common.collect.Lists;
import org.apache.http.NameValuePair;	import org.apache.http.NameValuePair;
import org.apache.httpmessae.BasicameValuePair;	import org.apache.http.message.BasicNameValuePair;
import org.jsoup.soup;	import org.jsoup.Jsoup;
import  org.jsoup.nodes.Document;	import org.jsoup.nodes.Document;
import  org.jsoup.nodes.Eement;	import org.jsoup.nodes.Element;
mportorg.jsoup.select.Elements;	import org.jsoup.select.Elements;
import  java.ioBufferedOuputStream;;	import java.io.BufferedOutputStream;
import java.ioFile;	import java.io.File;
import java.io.FileOutputStream;	import java.io.FileOutputStream;
import java.io.IException;	import java.io.IOException;
importjav.utilArrayList;	import java.util.ArrayList;
iportjava.util.List;	import java.util.List;
public  class CsdnSpider {	public class CsdnSpider {
private static finl  String CSDNACCOUNT = ""16657102793";;	private static final String CSDNACCOUNT = "16657102793";
privatestatic final String CSDNPASSWOR= "xxxx";;	private static final String CSDNPASSWORD = "xxxx";
public static void mainfStringf args  throws  Exception{	public static void main(String[] args) throws Exception {
loinCsdnPager;	loginCsdnPager();
}	}
	
public static void  loginCsdnPagerlthrows Exception {	public static void loginCsdnPager() throws Exception {
String html = HttpUtilssendGetl"htps:	String html = HttpUtils.sendGet("https:
try {	try {
Thread.currentThread..sleep100;	Thread.currentThread().sleep(1000);
} catch InterruptedException e 1	} catch (InterruptedException e) {
e.printStackTrace;	e.printStackTrace();
	}
Document doc =Jsoup.parsehtml;	Document doc = Jsoup.parse(html);
Element form= doc.selectl".user-pass.get0;	Element form = doc.select(".user-pass").get(0);
Stringlt =  form.select"nputname=ltf".get0.val;	String lt = form.select("input[name=lt]").get(0).val();
String execution = formselect"inputname=executionl"get0f..val;	String execution = form.select("input[name=execution]").get(0).val();
String _eventId = form.select"inputfname=_eventId".get0valf;	String _eventId = form.select("input[name=_eventId]").get(0).val();
List<NameValuePair> list= new ArrayList<>l;	List<NameValuePair> list = new ArrayList<>();
list.addlnew BasicNameValuePairl"username", CSDNACCOUNT;	list.add(new BasicNameValuePair("username", CSDNACCOUNT));
list.addlnew BasicNameValuePairl"password"" CSDPASSWORDf;	list.add(new BasicNameValuePair("password", CSDNPASSWORD));
list.addfnew  BasicNameValuePair"lt, lt;	list.add(new BasicNameValuePair("lt", lt));
list.adnew  BasicNameValuePair"execution", executionf;	list.add(new BasicNameValuePair("execution", execution));
list.addlnew BasicNameValuePair"_eventId",, _eventIdf;	list.add(new BasicNameValuePair("_eventId", _eventId));
System.out.printlnflist;	System.out.println(list);
String ret = HttpUtils.sendPost"https:	String ret = HttpUtils.sendPost("https:
ystem.out..println"ret is "+ ret;	System.out.println("ret is " + ret);
if ret.indexOf"edirectback" > -1 {	if (ret.indexOf("redirect_back") > -1) {
System.out.println"";	System.out.println("");
} elseif ret.indexOf"" > -1 {	} else if (ret.indexOf("") > -1) {
thrownew Exception""l;	throw new Exception("");
} ele {	} else {
throw new Exceptionl""";	throw new Exception("");
1	}
}	}
publc static  void domaifl throws Exception {	public static void domain() throws Exception {
String html = HttpUtils.sendGet""htts:	String html = HttpUtils.sendGet("https:
Document doc = Jsoup.parsehtmll;	Document doc = Jsoup.parse(html);
Element as = doc.selct".nav_com"f.select"li".select"a";	Elements as = doc.select(".nav_com").select("li").select("a");
List<Elements> blogList = Lists.newArrayListWithCapacityassize;;	List<Elements> blogList = Lists.newArrayListWithCapacity(as.size());
for Element a : as {	for (Element a : as) {
String fetcheUrl ="https: System.out.printlnlfetcheUrlf;	String fetcheUrl = "https: System.out.println(fetcheUrl);
StringlogHtml = HttpUtils..sendGetfetcheUrl;	String blogHtml = HttpUtils.sendGet(fetcheUrl);
Document blogDoc = Jsop..parselblogHtml;	Document blogDoc = Jsoup.parse(blogHtml);
Elements  blogAs =  blogDoc.select".title"l.selet"h2"selectf"a";	Elements blogAs = blogDoc.select(".title").select("h2").select("a");
ystem.out..printlnblogAs;	System.out.println(blogAs);
blogLstaddblogAs;	blogList.add(blogAs);
1	}
loginCdnPager;	loginCsdnPager();
BuffereOutputStream os = null;	BufferedOutputStream bos = null;
intcount  = 0;;	int count = 0;
try 1	try {
File file=  new  Flef"C:/t/m/pbos =  new  BufferedOutputStreamnew FileOutptSteamfile;	File file = new File("C:/t/m/p bos = new BufferedOutputStream(new FileOutputStream(file));
for  Elements blogs  : logList f	for (Elements blogs : blogList) {
for Element blog : blogsl {	for (Element blog : blogs) {
String href = blog.attr"href";	String href = blog.attr("href");
String commitSuffixUrl =href.substringhref.lastIndexOf"/""// /+/ /1/;/	String commitSuffixUrl = href.substring(href.lastIndexOf("/"/)/ /+/ /1/)/;/
/	/
/ / / / / / /   / / / / / / /  / /  / // Strig blogHtml= HttpUtils..sendGethref;	/ / / / / / / / / / / / / / / / / / / / String blogHtml = HttpUtils.sendGet(href);
Systemout.printlnblog.textf + "------------" + blg..attr"href"	System.out.println(blog.text() + "------------" + blog.attr("href"));
Document blogDoc = Jsoup.parseblogtml;	Document blogDoc = Jsoup.parse(blogHtml);
Elements titleAs = blogDoc.select".title-box".select"a"	Elements titleAs = blogDoc.select(".title-box").select("a");
System.out.printlntitleAsf;;	System.out.println(titleAs);
if tileAs != null  &&  !titleA.isEmty {	if (titleAs != null && !titleAs.isEmpty()) {
String commitPrefixUrl = titleAs.get0.ttrhrefl;	String commitPrefixUrl = titleAs.get(0).attr("href");
System.out.printlntitleAs.tex + "----------" + commitPrefixUrl;	System.out.println(titleAs.text() + "-----------" + commitPrefixUrl);
Sting commitUrl = commitPreixUrl + ""/p/h/o/e/n/i/x	String commitUrl = commitPrefixUrl + "/p/h/o/e/n/i/x
System.out.printn"commitrl ==" + commitUrl;	System.out.println("commitUrl ==" + commitUrl);
List<NameValuePair>nvps = newArrayLst<NameVauePair>	List<NameValuePair> nvps = new ArrayList<NameValuePair>();
nvps.addnewBasicNameValuePair"replyId", """f;	nvps.add(new BasicNameValuePair("replyId", ""));
nvps.addnew BaicNameValuePair"content"	nvps.add(new BasicNameValuePair("content",
"Weiammlysouw javapythonIOS"f;	"Weiammlysouw javapythonIOS"));
String postRequest= HttpUtils.sendPostcommitUrl, nvps;	String postRequest = HttpUtils.sendPost(commitUrl, nvps);
JONObject  jsonObj  = JSONObject.parseObjectpostRequst;	JSONObject jsonObj = JSONObject.parseObject(postRequest);
System.ut.printlnpostRequest;;	System.out.println(postRequest);
if jsonObj..gtIntegrlresult" == 1 1	if (jsonObj.getInteger("result") == 1) {
String articalUrl = commitPrefixUr + "/a/r/t/i/c/l/e System.out.println"success articalUrl  is" + articalUrl;	String articalUrl = commitPrefixUrl + "/a/r/t/i/c/l/e System.out.println("success articalUrl is " + articalUrl);
bos.writearticalUrl.getBytes;;	bos.write(articalUrl.getBytes());
bos.flush;	bos.flush();
count++;	count++;
} else {	} else {
try {	try {
Thread..currentThread.sleep2 * 60 * 1000;;	Thread.currentThread().sleep(2 * 60 * 1000);
} catch fInterruptedException ef {	} catch (InterruptedException e) {
e.printStackTrace;	e.printStackTrace();
1	}
}	}
}  else f	} else {
continue;	continue;
}	}
}	}
}	}
}catc IOExcption e  {	} catch (IOException e) {
System.out.printlnf""error  is " + e;	System.out.println("error is " + e);
  finally {	} finally {
if lbo != null  {	if (bos != null) {
try 	try {
boswritecount +"\n"l.getBytes;	bos.write((count + "\n").getBytes());
bos.flush;	bos.flush();
Sstem.out.printlnbos will colse";	System.out.println("bos will colse");
bos..cose;	bos.close();
} catch IOException e {	} catch (IOException e) {
System..out.println"error is " + e;	System.out.println("error is " + e);
}	}
}	}
}	}
1	}
}	}
